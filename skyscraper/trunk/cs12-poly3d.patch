diff -urN CS/include/csgeom/poly3d.h CS.new/include/csgeom/poly3d.h
--- CS/include/csgeom/poly3d.h	2007-02-02 13:55:52.000000000 -0600
+++ CS.new/include/csgeom/poly3d.h	2009-11-06 15:31:51.000000000 -0600
@@ -351,7 +351,11 @@
 struct csCompressVertex
 {
   size_t orig_idx;
-  int x, y, z;
+#ifdef _MSC_VER
+  __int64 x, y, z;
+#else
+  int64_t x, y, z;
+#endif
   size_t new_idx;
   bool used;
 };
diff -urN CS/libs/csgeom/poly3d.cpp CS.new/libs/csgeom/poly3d.cpp
--- CS/libs/csgeom/poly3d.cpp	2007-02-01 20:02:34.000000000 -0600
+++ CS.new/libs/csgeom/poly3d.cpp	2009-11-06 15:32:26.000000000 -0600
@@ -884,9 +884,15 @@
   for (i = 0; i < num_vertices; i++)
   {
     vt[i].orig_idx = i;
-    vt[i].x = (int)ceil (vertices[i].x * 1000000);
-    vt[i].y = (int)ceil (vertices[i].y * 1000000);
-    vt[i].z = (int)ceil (vertices[i].z * 1000000);
+#ifdef _MSC_VER
+    vt[i].x = (__int64)ceil (vertices[i].x * 1000000.0);
+    vt[i].y = (__int64)ceil (vertices[i].y * 1000000.0);
+    vt[i].z = (__int64)ceil (vertices[i].z * 1000000.0);
+#else
+    vt[i].x = (int64_t)ceil (vertices[i].x * 1000000.0);
+    vt[i].y = (int64_t)ceil (vertices[i].y * 1000000.0);
+    vt[i].z = (int64_t)ceil (vertices[i].z * 1000000.0);
+#endif
   }
 
   // First sort so that all (nearly) equal vertices are together.
