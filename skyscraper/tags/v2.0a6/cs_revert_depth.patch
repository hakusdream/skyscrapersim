diff -urN CS.old/libs/csplugincommon/opengl/assumedstate.cpp CS/libs/csplugincommon/opengl/assumedstate.cpp
--- CS.old/libs/csplugincommon/opengl/assumedstate.cpp	2008-05-12 14:23:57.000000000 -0500
+++ CS/libs/csplugincommon/opengl/assumedstate.cpp	2009-09-19 16:31:07.225541224 -0500
@@ -28,8 +28,7 @@
       void SetAssumedState (csGLStateCache* statecache,
 			    csGLExtensionManager* ext)
       {
-	glClearDepth (1.0);
-	glDepthRange (1.0, 0.0);
+	glClearDepth (0.0);
 	statecache->SetPixelUnpackAlignment (1);
         // The texture format stuff generally assumes little endian
 #ifndef CS_LITTLE_ENDIAN
diff -urN CS.old/plugins/video/render3d/opengl/gl_r2t_framebuf.cpp CS/plugins/video/render3d/opengl/gl_r2t_framebuf.cpp
--- CS.old/plugins/video/render3d/opengl/gl_r2t_framebuf.cpp	2008-05-12 14:23:57.000000000 -0500
+++ CS/plugins/video/render3d/opengl/gl_r2t_framebuf.cpp	2009-09-19 16:31:35.399244106 -0500
@@ -184,7 +184,7 @@
     glTexParameteri (textarget, GL_TEXTURE_MIN_FILTER, oldMinFilt);
   }
   rt_onscreen = true;
-  G3D->statecache->SetCullFace (GL_FRONT);
+  G3D->statecache->SetCullFace (GL_BACK);
 }
 
 void csGLRender2TextureFramebuf::SetupProjection ()
@@ -445,7 +445,7 @@
 {
   GLRENDER3D_OUTPUT_LOCATION_MARKER;
 
-  G3D->statecache->SetCullFace (GL_BACK);
+  G3D->statecache->SetCullFace (GL_FRONT);
 
   if (rt_onscreen)
   {
diff -urN CS.old/plugins/video/render3d/opengl/gl_render3d.cpp CS/plugins/video/render3d/opengl/gl_render3d.cpp
--- CS.old/plugins/video/render3d/opengl/gl_render3d.cpp	2009-08-27 09:31:08.000000000 -0500
+++ CS/plugins/video/render3d/opengl/gl_render3d.cpp	2009-09-19 16:32:37.774430340 -0500
@@ -248,13 +248,13 @@
       break;
     case CS_ZBUF_INVERT:
       statecache->Enable_GL_DEPTH_TEST ();
-      statecache->SetDepthFunc (GL_GREATER);
+      statecache->SetDepthFunc (GL_LESS);
       statecache->SetDepthMask (GL_FALSE);
       break;
     case CS_ZBUF_TEST:
     case CS_ZBUF_USE:
       statecache->Enable_GL_DEPTH_TEST ();
-      statecache->SetDepthFunc (GL_LEQUAL);
+      statecache->SetDepthFunc (GL_GEQUAL);
       statecache->SetDepthMask ((mode == CS_ZBUF_USE) ? GL_TRUE : GL_FALSE);
       break;
   }
@@ -940,7 +940,7 @@
     object_reg, GetDriver2D (), config, this));
 
   statecache->Enable_GL_CULL_FACE ();
-  statecache->SetCullFace (GL_BACK);
+  statecache->SetCullFace (GL_FRONT);
 
   statecache->SetStencilMask (stencil_shadow_mask);
 
@@ -2069,7 +2069,7 @@
       // @@@ Jorrit: to avoid flickering I had to increase the
       // values below and multiply them with 3.
       //glPolygonOffset (-0.1f, -4.0f); 
-      glPolygonOffset (0.3f, 12.0f); 
+      glPolygonOffset (-0.3f, -12.0f); 
       statecache->Enable_GL_POLYGON_OFFSET_FILL ();
       break;
     case CS_SHADOW_VOLUME_PASS1:
@@ -2843,11 +2843,11 @@
 	  
     cp = clipportal_stack[ffpnz];
     //map all Z-values to 0.0
-    glDepthRange(1.0, 1.0);
+    glDepthRange(0.0, 0.0);
     //Draw2DPolygon (cp->poly, cp->num_poly, cp->normal);
     DrawScreenPolygon (cp->poly, cp->num_poly);
     //restore default z-mapping
-    glDepthRange(1.0, 0.0);
+    glDepthRange(0.0, 1.0);
     
     // finish of debug coloring
     //glColorMask (false, false, false, false);
diff -urN CS.old/plugins/video/render3d/opengl/gl_render3d.h CS/plugins/video/render3d/opengl/gl_render3d.h
--- CS.old/plugins/video/render3d/opengl/gl_render3d.h	2008-05-12 14:23:57.000000000 -0500
+++ CS/plugins/video/render3d/opengl/gl_render3d.h	2009-09-19 16:33:00.595145798 -0500
@@ -365,7 +365,7 @@
   // @@@ Jorrit: to avoid flickering I had to increase the
   // values below and multiply them with 3.
   //{ glPolygonOffset (-0.05f, -2.0f); 
-  { glPolygonOffset (0.15f, 6.0f); 
+  { glPolygonOffset (-0.15f, -6.0f); 
   statecache->Enable_GL_POLYGON_OFFSET_FILL (); }
 
   // Disables offsetting of Z values
